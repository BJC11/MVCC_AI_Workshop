<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Random Number Generator</title>
    <style>
        /* UAH Font: fallback to sans-serif */
        @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap');

        :root {
            --uah-blue: #00457C;
            --uah-light-blue: #D6EAF8;
            --uah-accent-red: #C8102E;
            --uah-accent-green: #1D8348;
            --uah-secondary-blue: #005BAC;
        }

        body {
            font-family: 'Open Sans', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            background-color: var(--uah-blue);
        }

        .container {
            text-align: center;
            background-color: var(--uah-light-blue);
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            color: var(--uah-blue);
        }

        .number-display {
            font-size: 4em;
            font-weight: bold;
            margin: 20px 0;
            min-height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .even {
            color: var(--uah-secondary-blue);
        }

        .odd {
            color: var(--uah-accent-red);
        }

        .product {
            color: var(--uah-accent-green);
        }

        button {
            background-color: var(--uah-secondary-blue);
            color: white;
            padding: 15px 30px;
            font-size: 18px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin: 10px;
        }

        button:hover {
            background-color: var(--uah-blue);
        }

        button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

        .countdown {
            font-size: 2em;
            font-weight: bold;
            color: inherit;
            margin: 20px 0;
        }

        .history {
            margin-top: 20px;
            font-size: 1.2em;
        }

        .last-numbers {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin: 20px 0;
        }

        .number-box {
            padding: 10px 20px;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 1.5em;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Random Number Generator</h1>

        <div class="number-display" id="numberDisplay">
            Press the button to generate a number!
        </div>

        <button id="generateButton" onclick="generateNumber()">Generate Number</button>

        <div class="countdown" id="countdown"></div>

        <div class="last-numbers" id="lastNumbers"></div>

        <div class="history" id="history"></div>
    </div>

    <script>
        let generatedNumbers = [];
        let isCountingDown = false;
        let countdownInterval;
        let currentCountdown = 5;

        function generateNumber() {
            if (isCountingDown) return;

            const randomNum = Math.floor(Math.random() * 10) + 1;
            generatedNumbers.push(randomNum);

            const display = document.getElementById('numberDisplay');
            display.textContent = randomNum;

            display.className = 'number-display ' + (randomNum % 2 === 0 ? 'even' : 'odd');

            updateLastNumbers();

            if (generatedNumbers.length % 2 === 0) {
                startCountdown();
            }
        }

        function updateLastNumbers() {
            const lastNumbersDiv = document.getElementById('lastNumbers');
            const recent = generatedNumbers.slice(-2);

            if (recent.length > 0) {
                lastNumbersDiv.innerHTML = '<h3>Last Numbers:</h3>' + 
                    recent.map(num => 
                        `<div class="number-box ${num % 2 === 0 ? 'even' : 'odd'}">${num}</div>`
                    ).join('');
            }
        }

        function startCountdown() {
            isCountingDown = true;
            currentCountdown = 5;

            const button = document.getElementById('generateButton');
            const countdownDiv = document.getElementById('countdown');

            button.disabled = true;
            button.textContent = 'Counting down...';

            countdownInterval = setInterval(() => {
                countdownDiv.textContent = `Countdown: ${currentCountdown}`;
                currentCountdown--;

                if (currentCountdown < 1) {
                    clearInterval(countdownInterval);
                    showProduct();
                    resetAfterCountdown();
                }
            }, 1000);
        }

        function showProduct() {
            const lastTwo = generatedNumbers.slice(-2);
            const product = lastTwo[0] * lastTwo[1];

            const display = document.getElementById('numberDisplay');
            display.className = 'number-display product';
            display.textContent = `${lastTwo[0]} × ${lastTwo[1]} = ${product}`;

            const historyDiv = document.getElementById('history');
            historyDiv.innerHTML = `<strong>Product: ${lastTwo[0]} × ${lastTwo[1]} = ${product}</strong>`;
        }

        function resetAfterCountdown() {
            const button = document.getElementById('generateButton');
            const countdownDiv = document.getElementById('countdown');

            button.disabled = false;
            button.textContent = 'Generate Number';
            countdownDiv.textContent = '';
            isCountingDown = false;

            setTimeout(() => {
                const display = document.getElementById('numberDisplay');
                display.textContent = 'Press the button to generate a number!';
                display.className = 'number-display';
            }, 3000);
        }
    </script>
</body>
</html>
